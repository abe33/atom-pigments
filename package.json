{
  "name": "pigments",
  "main": "./lib/pigments",
  "version": "0.40.2",
  "description": "A package to display colors in project and files.",
  "keywords": [
    "colors",
    "palette",
    "less",
    "sass",
    "scss",
    "css",
    "stylus"
  ],
  "repository": "https://github.com/abe33/atom-pigments",
  "license": "MIT",
  "engines": {
    "atom": ">=1.19.0 <2.0.0"
  },
  "providedServices": {
    "autocomplete.provider": {
      "versions": {
        "2.0.0": "provideAutocomplete"
      }
    },
    "pigments.api": {
      "versions": {
        "1.0.0": "provideAPI"
      }
    }
  },
  "consumedServices": {
    "color-picker": {
      "versions": {
        "1.0.0": "consumeColorPicker"
      }
    },
    "pigments.expressions.colors": {
      "versions": {
        "1.0.0": "consumeColorExpressions"
      }
    },
    "pigments.expressions.variables": {
      "versions": {
        "1.0.0": "consumeVariableExpressions"
      }
    }
  },
  "deserializers": {
    "Palette": "deserializePalette",
    "ColorSearch": "deserializeColorSearch",
    "ColorProject": "deserializeColorProject",
    "ColorProjectElement": "deserializeColorProjectElement",
    "VariablesCollection": "deserializeVariablesCollection"
  },
  "viewProviders": [
    "pigmentsViewProvider"
  ],
  "configSchema": {
    "traverseIntoSymlinkDirectories": {
      "type": "boolean",
      "default": false
    },
    "sourceNames": {
      "type": "array",
      "default": [
        "**/*.css",
        "**/*.styl",
        "**/*.stylus",
        "**/*.less",
        "**/*.sass",
        "**/*.scss"
      ],
      "description": "Glob patterns of files to scan for variables.",
      "items": {
        "type": "string"
      }
    },
    "ignoredNames": {
      "type": "array",
      "default": [
        "vendor/*",
        "node_modules/*",
        "spec/*",
        "test/*"
      ],
      "description": "Glob patterns of files to ignore when scanning the project for variables.",
      "items": {
        "type": "string"
      }
    },
    "ignoredBufferNames": {
      "type": "array",
      "default": [],
      "description": "Glob patterns of files that won't get any colors highlighted",
      "items": {
        "type": "string"
      }
    },
    "extendedSearchNames": {
      "type": "array",
      "default": [
        "**/*.css"
      ],
      "description": "When performing the `find-colors` command, the search will scans all the files that match the `sourceNames` glob patterns and the one defined in this setting."
    },
    "supportedFiletypes": {
      "type": "array",
      "default": [
        "*"
      ],
      "description": "An array of file extensions where colors will be highlighted. If the wildcard `*` is present in this array then colors in every file will be highlighted."
    },
    "filetypesForColorWords": {
      "type": "array",
      "default": [
        "css",
        "less",
        "styl",
        "stylus",
        "sass",
        "scss"
      ],
      "description": "An array of file extensions where color values such as `red`, `azure` or `whitesmoke` will be highlighted. By default CSS and CSS pre-processors files are supported.\n\nYou can use `none` or whatever value that doesn't match a file extension to completely prevent color words from being highlighted."
    },
    "ignoredScopes": {
      "type": "array",
      "default": [],
      "description": "Regular expressions of scopes in which colors are ignored. For example, to ignore all colors in comments you can use `\\.comment`.",
      "items": {
        "type": "string"
      }
    },
    "autocompleteScopes": {
      "type": "array",
      "default": [
        ".source.css",
        ".source.css.less",
        ".source.sass",
        ".source.css.scss",
        ".source.stylus"
      ],
      "description": "The autocomplete provider will only complete color names in editors whose scope is present in this list.",
      "items": {
        "type": "string"
      }
    },
    "extendAutocompleteToVariables": {
      "type": "boolean",
      "default": false,
      "description": "When enabled, the autocomplete provider will also provide completion for non-color variables."
    },
    "extendAutocompleteToColorValue": {
      "type": "boolean",
      "default": false,
      "description": "When enabled, the autocomplete provider will also provide color value."
    },
    "autocompleteSuggestionsFromValue": {
      "type": "boolean",
      "default": false,
      "description": "When enabled, the autocomplete provider will suggest color variables from hexadecimal values."
    },
    "maxDecorationsInGutter": {
      "type": "integer",
      "default": 100,
      "min": 1,
      "max": 100,
      "description": "Sets a limit on how many decorations can be displayed in the gutter for the same row"
    },
    "markerType": {
      "type": "string",
      "default": "native-background",
      "enum": [
        "native-background",
        "native-underline",
        "native-outline",
        "native-dot",
        "native-square-dot",
        "gutter"
      ]
    },
    "sassShadeAndTintImplementation": {
      "type": "string",
      "default": "compass",
      "enum": [
        "compass",
        "bourbon"
      ],
      "description": "Sass doesn't provide any implementation for shade and tint function, and Compass and Bourbon have different implementation for these two methods. This setting allow you to chose which implementation to use."
    },
    "sortPaletteColors": {
      "type": "string",
      "default": "none",
      "enum": [
        "none",
        "by name",
        "by color"
      ]
    },
    "groupPaletteColors": {
      "type": "string",
      "default": "none",
      "enum": [
        "none",
        "by file"
      ]
    },
    "mergeColorDuplicates": {
      "type": "boolean",
      "default": false
    },
    "delayBeforeScan": {
      "type": "integer",
      "default": 500,
      "description": "Number of milliseconds after which the current buffer will be scanned for changes in the colors. This delay starts at the end of the text input and will be aborted if you start typing again during the interval."
    },
    "ignoreVcsIgnoredPaths": {
      "type": "boolean",
      "default": true,
      "title": "Ignore VCS Ignored Paths"
    },
    "notifyReloads": {
      "type": "boolean",
      "default": true,
      "description": "Whether Pigments will use a notification once the `Pigments: Reload` command completes or not. The notification includes informations about the result of the reload."
    },
    "dismissableReloadNotifications": {
      "type": "boolean",
      "default": true,
      "description": "Whether the reload notifications should be dismissed by a user action or not."
    }
  },
  "dependencies": {
    "underscore-plus": "1.x",
    "event-kit": "2.x",
    "fs-plus": "2.x",
    "async": "0.2.6",
    "css-color-function": "0.1.x",
    "minimatch": "3.0.x",
    "delegato": "^1.0.0",
    "atom-utils": ">=0.9.2"
  },
  "devDependencies": {
    "temp": "~0.8.1"
  }
}
